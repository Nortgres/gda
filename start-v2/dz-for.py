'''
Задание 6.1. Вводятся два целых положительных числа n и m, причем, n < m. Вывести в
строку через пробел квадраты целых чисел в диапазоне [n; m]. Программу реализовать при
помощи цикла while.
Пример ввода:
2 4
Пример вывода:
4 9 16
''' '''
# Задание 6.1.
n, m = map(int, input('Введите два положительных числа: ').split(' '))
list1 = []
if n < m:
    while n <= m:
        list1.append(n**2)
        n = n + 1
    print(*list1)
else:
    print('Первое число должно быть меньше второго.')
''' '''
Задание 6.2. Вводится стоимость одной книги (вещественное число). Необходимо вывести
на экран в строчку через пробел стоимости 2, 3, ... 10 таких книг с точностью до десятых.
Программу реализовать при помощи цикла while.
Пример ввода:
34.6
Пример вывода:
69.2 103.8 138.4 173.0 207.6 242.2 276.8 311.4 346.0
''' '''
# Задание 6.2.
price = float(input('Введите стоимость книги: '))
list2 = []
x = 1
while x < 11:
    list2.append(round(price*x, 1))
    x += 1
print(*list2)
''' '''
Задание 6.3. Вводится целое положительное число n. Вычислить и вывести на экран сумму:
1 + 1/2 + 1/3 + ... + 1/n с точностью до тысячных (три знака после запятой). Программу
реализовать при помощи цикла while.
Пример ввода:
8
Пример вывода:
2.718
''' '''
# Задание 6.3.
n = int(input('Введите целое положительное число: '))
x = 1
s = 0
while x <= n:
    s += 1 / x
    x += 1
print(round(s, 3))
''' '''
Задание 6.4. На каждой итерации цикла пользователь вводит целое число. Цикл
продолжается, пока не встретится число 0. Необходимо вычислить сумму введенных в
цикле чисел и вывести результат на экран. Программу реализовать при помощи цикла while.
Пример ввода:
8
11
2 -4 0
Пример вывода:
17
''' '''
# Задание 6.4.
n1 = 1
s1 = 0
while n1 != 0:
    n1 = int(input('Введите целое число: '))
    s1 += n1
print(s1)
''' '''
Задание 6.5. Вводится строка. Замените в этой строке все подряд идущие дефисы
(--, ---, ---- и т.д.) на одинарные (-). Результат преобразования строки выведите на экран.
Программу реализовать при помощи цикла while.
Пример ввода:
osnovnye--metody-----slovarey
Пример вывода:
osnovnye-metody-slovarey
''' '''
# Задание 6.5.
str = input('Введите строку: ')
newstr = ''
k = 0
while k < len(str):
    if str[k] == '-':
        c = 1
        while k + c < len(str) and str[k + c] == '-':
            c += 1
        newstr += '-'
        k += c
    else:
        newstr += str[k]
        k += 1
print(newstr)
''' '''
Задание 6.6. Вводится натуральное (то есть, целое положительное) число (от трехзначного
и более). Найти произведение всех его цифр. Результат вывести на экран. Программу
реализовать при помощи цикла while.
Пример ввода:
821
Пример вывода:
16
''' '''
# Задание 6.6.
num = int(input("Введите натуральное число: "))
key = 1
while num > 0:
    a = num % 10
    key *= a
    num //= 10

print(key)
''' '''
Задание 6.7. Последовательность Фибоначчи образуется так: первые два числа равны 1 и
1, а каждое последующее число равно сумме двух предыдущих. Имеем такую
последовательность чисел: 1, 1, 2, 3, 5, 8, 13, ... Постройте последовательность Фибоначчи
длиной n (n вводится с клавиатуры). Результат отобразите в виде строки полученных чисел,
записанных через пробел. Программу реализовать при помощи цикла while.
Пример ввода:
8
Пример вывода:
1 1 2 3 5 8 13 21
''' '''
# Задание 6.7.
n = int(input('Введите число: '))
i = 1
rez = [1, 1]
while len(rez) < n:
    x = rez[-1] + rez[-2]
    rez.append(x)
    i += 1
print(*rez)
''' '''
Задание 6.8. Одноклеточная амеба каждые 3 часа делится на 2 клетки. Определить,
сколько клеток будет через n часов (n - целое положительное число, вводимое с
клавиатуры). Считать, что изначально была одна амеба. Результат вывести на экран.
Задачу необходимо решить с использованием цикла while.
Пример ввода:
11
Пример вывода:
8
''' '''
# Задание 6.8.
n = int(input('Введите колличество часов: '))
a = 1
i = 1
while i <= n:
    if i%3 == 0:
        a *= 2
        i += 1
    else:
        i += 1
print(a)
''' '''
Задание 6.9. Гражданин 1 января открыл счет в банке, вложив 1000 руб. Каждый год размер
вклада увеличивается на 5% от имеющейся суммы. Определить сумму вклада через n лет
(n - целое положительное число, вводимое с клавиатуры). Результат округлить до сотых и
вывести на экран. Программу реализовать при помощи цикла while.
Пример ввода:
5
Пример вывода:
1276.28
''' '''
n = int(input('Введите колличество лет: '))
s = 1000
i = 1
while i <= n:
    s *= 1.05
    i += 1
print(round(s, 2))
''' '''
Задание 6.10. Вводятся два натуральных четных числа n и m в одну строчку через пробел,
причем n < m. Напечатать все нечетные числа из интервала [n, m]. Задачу решить без
применения условного оператора. Результат вывести на экран в виде строки чисел,
записанных через пробел. Программу реализовать при помощи цикла while.
Пример ввода:
2 10
Пример вывода:
3 5 7 9
''' '''
n, m = map(int, input('Введите два числа через пробел: ').split())
l1 = []
while n < m:
    if n % 2 != 0:
        l1.append(n)
        n += 1
    else:
        n += 1
print(*l1)
''' '''
Задание 6.11. Составить программу поиска всех трехзначных чисел, которые при делении
на 47 дают в остатке 43 и кратны 3. Вывести найденные числа в строчку через пробел.
Программу реализовать при помощи цикла while.
Пример ввода:
Пример вывода:
231 372 513 654 795 936
''' '''
l2 = []
n = 100
while n < 1000:
    if n % 47 == 43 and n % 3 == 0:
        l2.append(n)
        n += 1
    else:
        n += 1
print(*l2)
''' '''
Задание 6.12. Имеется одномерный список длиной 10 элементов, состоящий из нулей. На
каждой итерации цикла пользователь вводит целое число - индекс элемента списка p, по
которому записывается значение 1, если ее там еще нет. Если же 1 уже проставлена, то
список не менять и снова запросить у пользователя очередное число. Необходимо
расставить так пять единиц в список. (После этого цикл прерывается). Программу
реализовать с помощью цикла while и с использованием оператора continue, когда 1 не
может быть добавлена в список. Результат вывести на экран в виде последовательности
чисел, записанных через пробел.
Пример ввода:       Пример вывода:
1 2 2 5 7 5 9       0 1 1 0 0 1 0 1 0 1
'''
l3 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
